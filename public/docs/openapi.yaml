openapi: 3.0.0
info:
  title: Project Management API - Laravel
  description: API for managing projects and tasks with user authentication.
  contact:
    email: pedro.henrique.martins404@gmail.com
  version: 1.0.0
servers:
  - url: /api/
tags:
  - name: auth
    description: User authentication and profile management
  - name: project
    description: Operations about projects
  - name: task
    description: Operations about tasks

paths:
  /register:
    post:
      tags:
        - auth
      summary: Register a new user
      operationId: registerUser
      requestBody:
        description: New user registration
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid inputs
  /login:
    post:
      tags:
        - auth
      summary: Log in a user
      operationId: loginUser
      requestBody:
        description: User login
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '400':
          description: Invalid username/password inputs
        '401':
          description: Invalid username/password supplied
  /me:
    get:
      tags:
        - auth
      summary: Get current user
      operationId: getCurrentUser
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User retrieved successfully
        '401':
          description: Unauthorized
  /logout:
    post:
      tags:
        - auth
      summary: Log out current user
      operationId: logoutUser
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
        '401':
          description: Unauthorized
  /refresh:
    post:
      tags:
        - auth
      summary: Refresh user token
      operationId: refreshToken
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Token refreshed successfully
        '401':
          description: Unauthorized
  /profile/edit:
    put:
      tags:
        - auth
      summary: Edit user profile
      operationId: editProfile
      security:
        - bearerAuth: []
      requestBody:
        description: Profile data to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Profile updated successfully
        '400':
          description: Invalid nputs
        '401':
          description: Unauthorized
  /password/reset:
    put:
      tags:
        - auth
      summary: Reset user password
      operationId: resetPassword
      security:
        - bearerAuth: []
      requestBody:
        description: Password reset data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Password reset successfully
        '400':
          description: Invalid inputs
        '401':
          description: Unauthorized
  /tasks:
    get:
      tags:
        - auth
      summary: Get full tasks for current user
      operationId: getSearchFullTasksUser
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully search full tasks
        '401':
          description: Unauthorized
  /projects:
    get:
      tags:
        - project
      summary: Get all projects
      operationId: getProjects
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of projects
        '401':
          description: Unauthorized
    post:
      tags:
        - project
      summary: Create a new project
      operationId: createProject
      security:
        - bearerAuth: []
      requestBody:
        description: Project data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          description: Project created successfully
        '400':
          description: Invalid inputs
        '401':
          description: Unauthorized
  /projects/{id}:
    get:
      tags:
        - project
      summary: Get a project by ID
      operationId: getProjectById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Project data
        '401':
          description: Unauthorized
        '404':
          description: Project not found
    put:
      tags:
        - project
      summary: Update a project by ID
      operationId: updateProjectById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated project data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Project updated successfully
        '400':
          description: Invalid inputs
        '401':
          description: Unauthorized
        '404':
          description: Project not found
    delete:
      tags:
        - project
      summary: Delete a project by ID
      operationId: deleteProjectById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Project deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Project not found
  /projects/{id}/report:
    get:
      tags:
        - project
      summary: Get a project report by ID
      operationId: getProjectReportById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Project report successfully
        '401':
          description: Unauthorized
        '404':
          description: Project not found
  /projects/{project_id}/tasks:
    get:
      tags:
        - task
      summary: Get all tasks for a project
      operationId: getTasks
      security:
        - bearerAuth: []
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of tasks
        '401':
          description: Unauthorized
        '404':
          description: Project not found
    post:
      tags:
        - task
      summary: Create a new task for a project
      operationId: createTask
      security:
        - bearerAuth: []
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Task data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created successfully
        '400':
          description: Invalid inputs
        '401':
          description: Unauthorized
        '404':
          description: Project not found
  /projects/{project_id}/tasks/{id}:
    get:
      tags:
        - task
      summary: Get a task by ID for a project
      operationId: getTaskById
      security:
        - bearerAuth: []
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task data
        '401':
          description: Unauthorized
        '404':
          description: Project not found or Task not found
    put:
      tags:
        - task
      summary: Update a task by ID for a project
      operationId: updateTaskById
      security:
        - bearerAuth: []
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated task data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Task updated successfully
        '400':
          description: Invalid inputs
        '401':
          description: Unauthorized
        '404':
          description: Project not found or Task not found
    delete:
      tags:
        - task
      summary: Delete a task by ID for a project
      operationId: deleteTaskById
      security:
        - bearerAuth: []
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Task deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Project not found or Task not found

components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    Project:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
    Task:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        status:
          type: integer
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
